actor DRPGZombieMan : Zombieman Replaces Zombieman
{
    Tag "Former Human"
    
    States
    {
    Spawn:
        POSS A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::Spawn
    See:
        POSS A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::See
    }
}

actor DRPGShotgunGuy : ShotgunGuy Replaces ShotgunGuy
{
    Tag "Former Sergeant"
    
    States
    {
    Spawn:
        SPOS A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::Spawn
    See:
        SPOS A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::See
    }
}

actor DRPGChaingunGuy : ChaingunGuy Replaces ChaingunGuy
{
    Tag "Former Commando"
    
    States
    {
    Spawn:
        CPOS A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::Spawn
    See:
        CPOS A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::See
    }
}

actor DRPGDoomImp : DoomImp Replaces DoomImp
{
    Tag "Imp"
    
    States
    {
    Spawn:
        TROO A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::Spawn
    See:
        TROO A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::See
    }
}

actor DRPGDemon : Demon Replaces Demon
{
    Tag "Demon"
    
    States
    {
    Spawn:
        SARG A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::Spawn
    See:
        SARG A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::See
    }
}

actor DRPGSpectre : Spectre Replaces Spectre
{
    Tag "Spectre"
    
    States
    {
    Spawn:
        SARG A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::Spawn
    See:
        SARG A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::See
    }
}

actor DRPGCacodemon : Cacodemon Replaces Cacodemon
{
    Tag "Cacodemon"
    
    States
    {
    Spawn:
        HEAD A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::Spawn
    See:
        HEAD A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::See
    }
}

actor DRPGHellKnight : HellKnight Replaces HellKnight
{
    Tag "Hell Knight"
    
    States
    {
    Spawn:
        BOS2 A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::Spawn
    See:
        BOS2 A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::See
    }
}

actor DRPGBaronOfHell : BaronOfHell Replaces BaronOfHell
{
    Tag "Baron of Hell"
    
    States
    {
    Spawn:
        BOSS A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::Spawn
    See:
        BOSS A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::See
    }
}

actor DRPGLostSoul : LostSoul Replaces LostSoul
{
    Tag "Lost Soul"
    
    States
    {
    Spawn:
        SKUL A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOXP | MF_NOAURA | MF_NODROPS)
        Goto Super::Spawn
    See:
        SKUL A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOXP | MF_NOAURA | MF_NODROPS)
        Goto Super::See
    }
}

actor DRPGPainElemental : PainElemental Replaces PainElemental
{
    Tag "Pain Elemental"
    
    States
    {
    Spawn:
        PAIN A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::Spawn
    See:
        PAIN A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::See
    }
}

actor DRPGRevenant : Revenant Replaces Revenant
{
    Tag "Revenant"
    
    States
    {
    Spawn:
        SKEL A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::Spawn
    See:
        SKEL A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::See
    }
}

actor DRPGFatso : Fatso Replaces Fatso
{
    Tag "Mancubus"
    
    States
    {
    Spawn:
        FATT A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::Spawn
    See:
        FATT A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::See
    }
}

actor DRPGArachnotron : Arachnotron Replaces Arachnotron
{
    Tag "Arachnotron"
    
    States
    {
    Spawn:
        BSPI A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::Spawn
    See:
        BSPI A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::See
    }
}

actor DRPGArchvile : Archvile Replaces Archvile
{
    Tag "Archvile"
    
    States
    {
    Spawn:
        VILE A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::Spawn
    See:
        VILE A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::See
    }
}

actor DRPGWolfensteinSS : WolfensteinSS Replaces WolfensteinSS
{
    Tag "Wolfenstein SS"
    
    States
    {
    Spawn:
        SSWV A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::Spawn
    See:
        SSWV A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::See
    }
}

actor DRPGCyberdemon : Cyberdemon Replaces Cyberdemon
{
    Tag "Cyberdemon"
    
    States
    {
    Spawn:
        CYBR A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0, MF_BOSS)
        Goto Super::Spawn
    See:
        CYBR A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_BOSS)
        Goto Super::See
    }
}

actor DRPGSpiderMastermind : SpiderMastermind Replaces SpiderMastermind
{
    Tag "Spider Mastermind"
    
    States
    {
    Spawn:
        SPID A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0, MF_BOSS)
        Goto Super::Spawn
    See:
        SPID A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_BOSS)
        Goto Super::See
    }
}

// Projectiles
actor DRPGRocket : Rocket Replaces Rocket
{
    DamageType "Fire"
}

actor DRPGPlasmaBall : PlasmaBall Replaces PlasmaBall
{
    DamageType "Plasma"
}

actor DRPGBFGBall : BFGBall Replaces BFGBall
{
    DamageType "Plasma"
}

actor DRPGDoomImpBall : DoomImpBall Replaces DoomImpBall
{
    DamageType "Fire"
}

actor DRPGCacodemonBall : CacodemonBall Replaces CacodemonBall
{
    DamageType "Lightning"
}

actor DRPGBaronBall : BaronBall Replaces BaronBall
{
    DamageType "Plasma"
}

actor DRPGRevenantTracer : RevenantTracer Replaces RevenantTracer
{
    DamageType "Fire"
}

actor DRPGFatShot : FatShot Replaces FatShot
{
    DamageType "Fire"
}

actor DRPGArachnotronPlasma : ArachnotronPlasma Replaces ArachnotronPlasma
{
    DamageType "Plasma"
}

actor DRPGArchvileFire : ArchvileFire Replaces ArchvileFire
{
    DamageType "Fire"
}

// The Boss Brain needs special handling for the exit script
actor DRPGBossBrain : BossBrain Replaces BossBrain
{
    States
    {
    Spawn:
        BBRN A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOXP | MF_NOSTATS | MF_NOAURA | MF_NOPAYKILL | MF_NODROPS | MF_NOHEALTHBAR)
        Goto Super::Spawn
    Death:
        BBRN A 0 ACS_Execute(30000, 0)
        Goto Super::Death
    }
}

// Practice Target
actor DRPGPracticeTarget 19999
{
    Radius 16
    Height 40
    Health 10000
    Mass 0x7FFFFFFF
    
    Scale 0.25
    
    +ISMONSTER
    +SHOOTABLE
    +NOGRAVITY
    +NOBLOOD
    +FORCEYBILLBOARD
    +NEVERTARGET
    -SOLID
    -COUNTKILL
    
    States
    {
    Spawn:
        TNT1 A 0 NoDelay Bright ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOXP | MF_NOSTATS | MF_NOAURA | MF_NOPAYKILL | MF_NODROPS | MF_NOHEALTHBAR)
    See:
        TRGT A 1
        Loop
    Death:
        TNT1 A -1 A_SpawnItemEx("DRPGPracticeTarget", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
        Stop
    }
}

// Used to buff friendly monsters and give them the appropriate flags
actor DRPGFriendlyBooster : CustomInventory
{
    States
    {
    Pickup:
        TNT1 A 0 A_ChangeFlag("SOLID", false)
        TNT1 A 0 A_ChangeFlag("ALWAYSFAST", true)
        TNT1 A 0 A_ChangeFlag("QUICKTORETALIATE", true)
        TNT1 A 0 A_ChangeFlag("MISSILEMORE", true)
        Stop
    }
}

// Red Aura Giver
actor DRPGRedAuraGiver : CustomInventory
{
    States
    {
    Pickup:
        TNT1 A 0 A_ChangeFlag("MISSILEMORE", true)
        TNT1 A 0 A_ChangeFlag("MISSILEEVENMORE", true)
        TNT1 A 0 A_ChangeFlag("NOFEAR", true)
        Stop
    }
}

// Green Aura Giver
actor DRPGGreenAuraGiver : CustomInventory
{
    States
    {
    Pickup:
        TNT1 A 0 A_ChangeFlag("REFLECTIVE", true)
        TNT1 A 0 A_ChangeFlag("SHIELDREFLECT", true)
        TNT1 A 0 A_ChangeFlag("NOPAIN", true)
        TNT1 A 0 A_ChangeFlag("NORADIUSDMG", true)
        TNT1 A 0 A_ChangeFlag("AVOIDMELEE", true)
        TNT1 A 0 A_ChangeFlag("DONTBLAST", true)
        TNT1 A 0 A_ChangeFlag("DONTRIP", true)
        Stop
    }
}

// White Aura Giver
actor DRPGWhiteAuraGiver : CustomInventory
{
    States
    {
    Pickup:
        TNT1 A 0 A_ChangeFlag("LOOKALLAROUND", true)
        Stop
    }
}

// Pink Aura Giver
actor DRPGPinkAuraGiver : CustomInventory
{
    States
    {
    Pickup:
        TNT1 A 0 A_ChangeFlag("DONTDRAIN", true)
        Stop
    }
}

// Blue Aura Giver
actor DRPGBlueAuraGiver : CustomInventory
{
    States
    {
    Pickup:
        TNT1 A 0 A_ChangeFlag("NOTIMEFREEZE", true)
        TNT1 A 0 A_ChangeFlag("SEEINVISIBLE", true)
        Stop
    }
}

// Orange Aura Giver
actor DRPGOrangeAuraGiver : CustomInventory
{
    States
    {
    Pickup:
        TNT1 A 0 A_ChangeFlag("ALWAYSFAST", true)
        TNT1 A 0 A_ChangeFlag("QUICKTORETALIATE", true)
        TNT1 A 0 A_ChangeFlag("DROPOFF", true)
        Stop
    }
}

// Level-up Monsters, used with White Aura
actor DRPGMonsterLevelupGiver : CustomInventory
{
    States
    {
    Pickup:
        TNT1 A 0 A_RadiusGive("DRPGMonsterLevelup", 512, RGF_MONSTERS)
        Stop
    }
}
