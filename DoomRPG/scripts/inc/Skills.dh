#ifndef _SKILLS_DH_
#define _SKILLS_DH_

struct SkillLevelInfo
{
    int CurrentLevel;
    int Level;
};

struct Skill
{
    str Name;
    int Cost;
    int MaxLevel;
    ScriptPtr(SkillLevelInfo *, void *) -> bool Use;
    str[MAX_LEVELS] Description;
    str Icon;
};

AddressSpaceDecl MapArray SkillSpace;
typedef Skill SkillSpace *SkillPtr;

extern
{
    variable SkillSpace Skill[MAX_CATEGORIES][MAX_SKILLS] SkillData;
    
	variable MapRegister bool Overdrive;
	variable MapRegister int BulletTimeTimer;
	variable MapRegister int ForceFieldTID;
    
    variable MapArray int[MAX_CATEGORIES] SkillCategoryMax;
};

extern "ACS"
{
    script void SkillWheel() enter;
    script void UseSkill(int) net;
    script void RemoveAura();
    script void ClearStatusEffects();
    
    // --------------------------------------------------
    // Skill Scripts
	
    // Healing/Support
    script bool Heal(SkillLevelInfo *, void *);
    script bool HealSummons(SkillLevelInfo *, void *);
    script bool HealTeam(SkillLevelInfo *, void *);
    script bool Decontaminate(SkillLevelInfo *, void *);
	script bool Repair(SkillLevelInfo *, void *);
    
    // Powerups
	script bool Powerup(SkillLevelInfo *, void *);
	script bool BulletTime(SkillLevelInfo *, void *);
	script bool DropWeapon(SkillLevelInfo *, void *);
	script bool DropAmmo(SkillLevelInfo *, void *);

    // Auras
    script bool UseAura(SkillLevelInfo *, void *);

    // Attacks
	script bool Weaken(SkillLevelInfo *, void *);
    script bool Translocate(SkillLevelInfo *, void *);
    script bool Repulse(SkillLevelInfo *, void *);
    script bool AuraSteal(SkillLevelInfo *, void *);
    script bool SoulSteal(SkillLevelInfo *, void *);
    
    // Summons
	script bool Summon(SkillLevelInfo *, void *);
    
    // Utility
	script bool BreakdownArmor(SkillLevelInfo *, void *);
	script bool ForceWall(SkillLevelInfo *, void *);
	script bool Rally(SkillLevelInfo *, void *);
	script bool Unsummon(SkillLevelInfo *, void *);
	script bool Recall(SkillLevelInfo *, void *);
    script bool Magnetize(SkillLevelInfo *, void *);
    script bool WirelessLocker(SkillLevelInfo *, void *);
	script bool Transport(SkillLevelInfo *, void *);
};

extern
{
    script void CleanDropTIDArray();
    
    function void BuildSkillData();
    
    function int ScaleEPCost(int);
    
    function void CheckSkills();
};

#endif
